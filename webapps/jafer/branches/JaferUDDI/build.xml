<!--
JAFER UDDI library Created on 12-September-2005
-->

<project name="JaferUDDI" basedir="." default="build-all">

	<!-- set up build properties -->

	<property name="src.dir" value="src" />
	<property name="build.dir" value="build" />
	<property name="lib.dir" value="lib" />
	<property name="manifest.dir" value="manifest" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="dist.dir" value="${build.dir}/dist" />
	<property name="doc.dir" value="${build.dir}/doc" />
	
	<property name="dist.jaferuddi.filename" value="jaferuddi.jar" />
	<property name="dist.installjaferuddi.filename" value="jaferuddi.zip" />
	
	<!-- set up the project path to all jars in lib for compiling-->
	<path id="support.libs">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<!-- clean up the entire build directory -->
	<target name="clean">
		<echo message="Cleaning ${build.dir}" />
		<delete failonerror="false" includeEmptyDirs="true">
		    <fileset dir="${build.dir}"/>
		  </delete>
	</target>

	<!-- create the entire build directory -->
	<target name="create-support-dirs">
		<echo message="Creating build support directories" />
		<mkdir dir="${classes.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${doc.dir}" />
	</target>

	<!-- compile the source code and copy resources -->
	<target name="compile-jaferuddi" depends="create-support-dirs">
		<echo message="Starting compilation" />
		<echo message="   SRC   Path = ${src.dir}" />
		<echo message="   Dest  Path = ${classes.dir}" />

		<javac srcdir="${src.dir}" destdir="${classes.dir}" source="1.4" target="1.4">
			<classpath refid="support.libs" />
		</javac>
		<echo message="Compilation completed" />
	</target>

	<!-- copy UDDI resource files -->
	<target name="copy-jar-resources" depends="create-support-dirs">
		<echo message="Copying resource files" />

		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}">
				<include name="org/jafer/conf/*.xml" />
			</fileset>
		</copy>
		<echo message="Resources copied" />
	</target>

	<!-- create the Jafer UDDI distribution JARS -->
	<target name="distribute-jaferuddi" depends="compile-jaferuddi,copy-jar-resources">
		<echo message="Creating ${dist.jaferuddi.filename} distribution" />

		<delete file="${dist.dir}/${dist.jaferuddi.filename}" quiet="true" />

		<jar destfile="${dist.dir}/${dist.jaferuddi.filename}"
		     basedir="${classes.dir}"
		     manifest="${manifest.dir}/manifest.mf">
		</jar>

		<echo message="${dist.jaferuddi.filename} JAR created" />
	</target>

	<!-- create documentation set -->
	<target name="create-documentation" depends="create-support-dirs">
		<echo message="Creating Java doc" />
		<javadoc sourcepath="${src.dir}"
		         destdir="${doc.dir}"
		         packagenames="org.jafer.*"
		         classpathref="support.libs"
		         useexternalfile="yes"
		         access="private"
		         author="true"
		         version="true"
		         use="true"
		         source="1.4"
		         windowtitle="Jafer UDDI API">

			<tag name="uml.dependency" enabled="false" description="omondo tag to remove till aquire doclet" />
			<tag name="uml.property" enabled="false" description="omondo tag to remove till aquire doclet" />
			<tag name="uml.associationEnd" enabled="false" description="omondo tag to remove till aquire doclet" />

		</javadoc>
	</target>

	<!-- Build installer zip files -->
		<target name="build-installer" depends="distribute-jaferuddi,create-documentation">
			<echo message="Building jaffer uddi installer" />

			<zip destfile="${dist.dir}/${dist.installjaferuddi.filename}">
				<fileset file="${dist.dir}/${dist.jaferuddi.filename}" />
				<zipfileset  dir="${doc.dir}" prefix="${doc.dir}"/>
				<zipfileset  dir="${lib.dir}" prefix="${lib.dir}"/>
			</zip>

			<echo message="Completed building installer" />
		</target>
	
	<!-- MAIN BUILD TARGETS -->
	<target name="build-all" depends="build-installer">
		<echo message="Completed full build" />
	</target>

	<target name="clean-build-all" depends="clean,build-all">
		<echo message="Completed clean full build" />
	</target>

	
</project>


